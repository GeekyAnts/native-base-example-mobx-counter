{"version":3,"sources":["__mocks__/request.js"],"names":["let","extend","require","asyncCallback","cb","setImmediate","apply","arguments","initParams","uri","options","callback","params","request","Error","currentResponse","__setMockResponse","object","module","exports"],"mappings":"AAAA;;AAEAA,IAAIC,SAASC,OAATD,UAAJD;;AAEA,SAASG,aAAT,CAAuBC,EAAvB,EAA2B;AACzB,SAAO,YAAW;AAChBC,iBAAa,MAAMD,GAAGE,KAAHF,CAAS,IAATA,EAAeG,SAAfH,CAAnBC;AACD,GAFD;AAGF;;AAEA;AACA,SAASG,UAAT,CAAoBC,GAApB,EAAyBC,OAAzB,EAAkCC,QAAlC,EAA4C;AAC1C,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,eAAWD,OAAXC;AACF;;AAEA,MAAIC,SAAS,EAAb;AACA,MAAI,OAAOF,OAAP,KAAmB,QAAvB,EAAiC;AAC/BT,WAAOW,MAAPX,EAAeS,OAAfT,EAAwB,EAACQ,GAAD,EAAxBR;AACF,GAFA,MAEO,IAAI,OAAOQ,GAAP,KAAe,QAAnB,EAA6B;AAClCR,WAAOW,MAAPX,EAAe,EAACQ,GAAD,EAAfR;AACF,GAFO,MAEA;AACLA,WAAOW,MAAPX,EAAeQ,GAAfR;AACF;;AAEAW,SAAOD,QAAPC,GAAkBD,YAAYC,OAAOD,QAArCC;AACA,SAAOA,MAAP;AACF;;AAEA,SAASC,OAAT,CAAiBJ,GAAjB,EAAsBC,OAAtB,EAA+BC,QAA/B,EAAyC;AACvC,MAAI,OAAOF,GAAP,KAAe,WAAnB,EAAgC;AAC9B,UAAM,IAAIK,KAAJ,CAAU,iDAAV,CAAN;AACF;;AAEA,MAAIF,SAASJ,WAAWC,GAAXD,EAAgBE,OAAhBF,EAAyBG,QAAzBH,CAAb;AACAG,aAAWR,cAAcS,OAAOD,QAArBR,CAAXQ;AACAA,WAAS,IAATA,EAAeI,eAAfJ;AACF;;AAEAX,IAAIe,eAAJf;AACAa,QAAQG,iBAARH,GAA6BI,MAAD,IAAYF,kBAAkBE,MAA1DJ;;AAEAK,OAAOC,OAAPD,GAAiBL,OAAjBK","file":"../../__mocks__/request.js","sourcesContent":["'use strict';\n\nlet extend = require('extend');\n\nfunction asyncCallback(cb) {\n  return function() {\n    setImmediate(() => cb.apply(this, arguments));\n  };\n}\n\n// organize params for patch, post, put, head, del\nfunction initParams(uri, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n  }\n\n  var params = {};\n  if (typeof options === 'object') {\n    extend(params, options, {uri});\n  } else if (typeof uri === 'string') {\n    extend(params, {uri});\n  } else {\n    extend(params, uri);\n  }\n\n  params.callback = callback || params.callback;\n  return params;\n}\n\nfunction request(uri, options, callback) {\n  if (typeof uri === 'undefined') {\n    throw new Error('undefined is not a valid uri or options object.');\n  }\n\n  var params = initParams(uri, options, callback);\n  callback = asyncCallback(params.callback);\n  callback(null, currentResponse);\n}\n\nlet currentResponse;\nrequest.__setMockResponse = (object) => currentResponse = object;\n\nmodule.exports = request;\n"],"sourceRoot":"/xdl/src"}