{"version":3,"sources":["detach/ExponentTools.js"],"names":["async","url","headers","let","requestOptions","replace","response","await","request","promise","responseBody","body","console","log","manifest","JSON","parse","getManifestAsync","args","length","spawnAsyncQuiet","stdio","cwd","process","spawnAsyncThrowError","e","error","message","spawnAsync","plistPath","plistName","transform","configPlistName","path","join","configFilename","configContents","fs","readFile","config","writeFile","stringify","modifyIOSPropertyListAsync","restoreOriginal","cleanIOSPropertyListBackupAsync","destinationIconPath","projectRoot","defaultIconFilename","iconUrl","saveUrlToPathAsync","icon","saveIconToPathAsync","iconSizes","forEach","iconSize","iconResolutions","iconResolution","iconQualifier","getAppleIconQualifier","iconKey","rawIconFilename","usesDefault","ios","hasOwnProperty","warn","iconFilename","iconSizePx","configureIOSIconsAsync","Promise","resolve","reject","stream","createWriteStream","on","getFilesizeInBytes","Error","pipe","pathOrURL","outPath","localPath","existsSync","createReadStream","stats","statSync","fileSizeInBytes"],"mappings":"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","file":"../../detach/ExponentTools.js","sourcesContent":["// Copyright 2015-present 650 Industries. All rights reserved.\n\n'use strict';\n\nimport fs from 'fs';\nimport path from 'path';\nimport request from 'request';\nimport spawnAsyncQuiet from '@exponent/spawn-async';\n\nfunction saveUrlToPathAsync(url, path) {\n  return new Promise(function(resolve, reject) {\n    let stream = fs.createWriteStream(path);\n    stream.on('close', () => {\n      if (getFilesizeInBytes(path) < 10) {\n        throw new Error(`{filename} is too small`);\n      }\n      resolve();\n    });\n    stream.on('error', reject);\n    request(url).pipe(stream);\n  });\n}\n\nfunction saveIconToPathAsync(projectRoot, pathOrURL, outPath) {\n  const localPath = path.resolve(projectRoot, pathOrURL);\n  return new Promise(function(resolve, reject) {\n    let stream = fs.createWriteStream(outPath);\n    stream.on('close', () => {\n      if (getFilesizeInBytes(outPath) < 10) {\n        throw new Error(`{filename} is too small`);\n      }\n      resolve();\n    });\n    stream.on('error', reject);\n    if (fs.existsSync(localPath)) {\n      fs.createReadStream(localPath).pipe(stream);\n    } else {\n      request(pathOrURL).pipe(stream);\n    }\n  });\n}\n\nfunction getFilesizeInBytes(path) {\n  let stats = fs.statSync(path);\n  let fileSizeInBytes = stats['size'];\n  return fileSizeInBytes;\n}\n\nasync function getManifestAsync(url, headers) {\n  let requestOptions = {\n    url: url.replace('exp://', 'http://') + '/index.exp',\n    headers,\n  };\n\n  let response = await request.promise(requestOptions);\n  let responseBody = response.body;\n  console.log('Using manifest:', responseBody);\n  let manifest = JSON.parse(responseBody);\n\n  return manifest;\n}\n\nasync function spawnAsyncThrowError(...args) {\n  if (args.length === 2) {\n    return spawnAsyncQuiet(args[0], args[1], {\n      stdio: 'inherit',\n      cwd: process.cwd(),\n    });\n  } else {\n    return spawnAsyncQuiet(...args);\n  }\n}\n\nasync function spawnAsync(...args) {\n  try {\n    return await spawnAsyncThrowError(...args);\n  } catch (e) {\n    console.error(e.message);\n  }\n}\n\nasync function modifyIOSPropertyListAsync(plistPath, plistName, transform) {\n  let configPlistName = path.join(plistPath, `${plistName}.plist`);\n  let configFilename = path.join(plistPath, `${plistName}.json`);\n\n  // grab original plist as json object\n  await spawnAsyncThrowError('plutil', ['-convert', 'json', configPlistName, '-o', configFilename]);\n  let configContents = await fs.promise.readFile(configFilename, 'utf8');\n  let config;\n\n  try {\n    config = JSON.parse(configContents);\n  } catch (e) {\n    console.log(`Error parsing ${configFilename}`, e);\n    console.log('The erroneous file contents was:', configContents);\n    config = {};\n  }\n\n  // apply transformation\n  config = transform(config);\n\n  // back up old plist and swap in modified one\n  await spawnAsyncThrowError('/bin/cp', [configPlistName, `${configPlistName}.bak`]);\n  await fs.promise.writeFile(configFilename, JSON.stringify(config));\n  await spawnAsyncThrowError('plutil', ['-convert', 'xml1', configFilename, '-o', configPlistName]);\n  return config;\n}\n\nasync function cleanIOSPropertyListBackupAsync(plistPath, plistName, restoreOriginal = true) {\n  let configPlistName = path.join(plistPath, `${plistName}.plist`);\n  let configFilename = path.join(plistPath, `${plistName}.json`);\n\n  if (restoreOriginal) {\n    await spawnAsyncThrowError('/bin/cp', [`${configPlistName}.bak`, configPlistName]);\n  }\n\n  await spawnAsyncThrowError('/bin/rm', [`${configPlistName}.bak`]);\n  await spawnAsyncThrowError('/bin/rm', [configFilename]);\n  return;\n}\n\nfunction getAppleIconQualifier(iconSize, iconResolution) {\n  let iconQualifier;\n  if (iconResolution !== 1) {\n    // e.g. \"29x29@3x\"\n    iconQualifier = `${iconSize}x${iconSize}@${iconResolution}x`;\n  } else {\n    iconQualifier = `${iconSize}x${iconSize}`;\n  }\n  if (iconSize === 76 || iconSize === 83.5) {\n    // ipad sizes require ~ipad at the end\n    iconQualifier = `${iconQualifier}~ipad`;\n  }\n  return iconQualifier;\n}\n\n/**\n * Based on keys in the given manifest,\n * ensure that the proper iOS icon images exist -- assuming Info.plist already\n * points at them under CFBundleIcons.CFBundlePrimaryIcon.CFBundleIconFiles.\n *\n * This only works on MacOS (as far as I know) because it uses the sips utility.\n */\nasync function configureIOSIconsAsync(manifest, destinationIconPath, projectRoot) {\n  let defaultIconFilename;\n  if (manifest.iconUrl) {\n    defaultIconFilename = 'exp-icon.png';\n    await saveUrlToPathAsync(manifest.iconUrl, `${destinationIconPath}/${defaultIconFilename}`);\n  } else if (projectRoot && manifest.icon) {\n    defaultIconFilename = 'exp-icon.png';\n    await saveIconToPathAsync(projectRoot, manifest.icon, `${destinationIconPath}/${defaultIconFilename}`);\n  }\n\n  let iconSizes = [29, 40, 60, 76, 83.5];\n  iconSizes.forEach(iconSize => {\n    let iconResolutions;\n    if (iconSize === 76) {\n      // iPad has 1x and 2x icons for this size only\n      iconResolutions = [1, 2];\n    } else {\n      iconResolutions = [2, 3];\n    }\n    iconResolutions.forEach(async (iconResolution) => {\n      let iconQualifier = getAppleIconQualifier(iconSize, iconResolution);\n      // TODO(nikki): Support local paths for these icons\n      let iconKey = `iconUrl${iconQualifier}`;\n      let rawIconFilename;\n      let usesDefault = false;\n      if (manifest.ios && manifest.ios.hasOwnProperty(iconKey)) {\n        // manifest specifies an image just for this size/resolution, use that\n        rawIconFilename = `exp-icon${iconQualifier}.png`;\n        await saveUrlToPathAsync(manifest.ios[iconKey], `${destinationIconPath}/${rawIconFilename}`);\n      } else {\n        // use default manifest.iconUrl\n        usesDefault = true;\n        if (defaultIconFilename) {\n          rawIconFilename = defaultIconFilename;\n        } else {\n          console.warn(`Manifest does not specify ios.${iconKey} nor a default iconUrl. Bundle will use the Expo logo.`);\n          return;\n        }\n      }\n      let iconFilename = `AppIcon${iconQualifier}.png`;\n      let iconSizePx = iconSize * iconResolution;\n      await spawnAsyncThrowError('/bin/cp', [rawIconFilename, iconFilename], {\n        stdio: 'inherit',\n        cwd: destinationIconPath,\n      });\n      await spawnAsyncThrowError('sips', ['-Z', iconSizePx, iconFilename], {\n        stdio: ['ignore', 'ignore', 'inherit' ], // only stderr\n        cwd: destinationIconPath,\n      });\n      if (!usesDefault) {\n        // non-default icon used, clean up the downloaded version\n        await spawnAsyncThrowError('/bin/rm', [path.join(destinationIconPath, rawIconFilename)]);\n      }\n    });\n  });\n\n  // clean up default icon\n  if (defaultIconFilename) {\n    await spawnAsyncThrowError('/bin/rm', [path.join(destinationIconPath, defaultIconFilename)]);\n  }\n  return;\n}\n\nexport {\n  saveUrlToPathAsync,\n  saveIconToPathAsync,\n  getManifestAsync,\n  spawnAsyncThrowError,\n  spawnAsync,\n  modifyIOSPropertyListAsync,\n  cleanIOSPropertyListBackupAsync,\n  configureIOSIconsAsync,\n};\n"],"sourceRoot":"/xdl/src"}