{"version":3,"sources":["__tests__/Exp-test.js"],"names":["jest","mock","fs","require","mockfs","describe","beforeEach","packageJson","JSON","stringify","name","version","main","packageJsonAndroid","packageJsonIos","packageJsonNoMain","expJson","slug","expJsonWithEntry","entryPoint","__configureFs","afterEach","restore","it","async","await","Exp","determineEntryPointAsync","expect","toBe"],"mappings":";;;;AAKA;AAAA;AAAA;;;;;;AALAA,KAAKC,IAALD;;AAEA,MAAME,KAAKC,OAALD,MAAN;AACA,MAAME,SAASD,OAATC,WAAN;;AAIAC,SAAS,0BAATA,EAAqC,MAAM;AACzCC,aAAW,MAAM;AACf,UAAMC,cAAcC,KAAKC,SAALD,CAAe;AACjCE,YAAM,YAD2B;AAEjCC,eAAS,OAFwB;AAGjCC,YAAM;AAH2B,KAAfJ,EAIjB,IAJiBA,EAIX,CAJWA,CAApB;;AAMA,UAAMK,qBAAqBL,KAAKC,SAALD,CAAe;AACxCE,YAAM,mBADkC;AAExCC,eAAS,OAF+B;AAGxCC,YAAM;AAHkC,KAAfJ,EAIxB,IAJwBA,EAIlB,CAJkBA,CAA3B;;AAMA,UAAMM,iBAAiBN,KAAKC,SAALD,CAAe;AACpCE,YAAM,eAD8B;AAEpCC,eAAS,OAF2B;AAGpCC,YAAM;AAH8B,KAAfJ,EAIpB,IAJoBA,EAId,CAJcA,CAAvB;;AAMA,UAAMO,oBAAoBP,KAAKC,SAALD,CAAe;AACvCE,YAAM,YADiC;AAEvCC,eAAS;AAF8B,KAAfH,CAA1B;;AAKA,UAAMQ,UAAUR,KAAKC,SAALD,CAAe;AAC7BE,YAAM,aADuB;AAE7BC,eAAS,OAFoB;AAG7BM,YAAM;AAHuB,KAAfT,EAIb,IAJaA,EAIP,CAJOA,CAAhB;;AAMA,UAAMU,mBAAmBV,KAAKC,SAALD,CAAe;AACtCE,YAAM,YADgC;AAEtCC,eAAS,OAF6B;AAGtCQ,kBAAY;AAH0B,KAAfX,CAAzB;;AAMAN,OAAGkB,aAAHlB,CAAiB;AACf,0CAAoCK,WADrB;AAEf,sCAAgCS,OAFjB;AAGf,sCAAgC,oBAHjB;;AAKf,kDAA4CD,iBAL7B;AAMf,8CAAwCC,OANzB;AAOf,8CAAwC,oBAPzB;;AASf,sCAAgCH,kBATjB;AAUf,kCAA4BG,OAVb;AAWf,0CAAoC,oBAXrB;;AAaf,kCAA4BF,cAbb;AAcf,8BAAwBE,OAdT;AAef,kCAA4B,oBAfb;;AAiBf,sCAAgCT,WAjBjB;AAkBf,kCAA4BW,gBAlBb;AAmBf,iCAA2B;AAnBZ,KAAjBhB;AAqBD,GAzDDI;;AA2DAe,YAAU,MAAM;AACdjB,WAAOkB,OAAPlB;AACD,GAFDiB;;AAIAE,KAAG,oBAAHA,oBAAyBC,aAAY;AACnC,UAAML,aAAaM,MAAMC,sBAAIC,wBAAJD,CAA6B,qBAA7BA,CAAzB;AACAE,WAAOT,UAAPS,EAAmBC,IAAnBD,CAAwB,UAAxBA;AACD,GAHDL;;AAKAA,KAAG,4BAAHA,oBAAiCC,aAAY;AAC3C,UAAML,aAAaM,MAAMC,sBAAIC,wBAAJD,CAA6B,6BAA7BA,CAAzB;AACAE,WAAOT,UAAPS,EAAmBC,IAAnBD,CAAwB,UAAxBA;AACD,GAHDL;;AAKAA,KAAG,gBAAHA,oBAAqBC,aAAY;AAC/B,UAAML,aAAaM,MAAMC,sBAAIC,wBAAJD,CAA6B,iBAA7BA,CAAzB;AACAE,WAAOT,UAAPS,EAAmBC,IAAnBD,CAAwB,kBAAxBA;AACD,GAHDL;;AAKAA,KAAG,YAAHA,oBAAiBC,aAAY;AAC3B,UAAML,aAAaM,MAAMC,sBAAIC,wBAAJD,CAA6B,aAA7BA,CAAzB;AACAE,WAAOT,UAAPS,EAAmBC,IAAnBD,CAAwB,cAAxBA;AACD,GAHDL;;AAKAA,KAAG,gBAAHA,oBAAqBC,aAAY;AAC/B,UAAML,aAAaM,MAAMC,sBAAIC,wBAAJD,CAA6B,iBAA7BA,CAAzB;AACAE,WAAOT,UAAPS,EAAmBC,IAAnBD,CAAwB,SAAxBA;AACD,GAHDL;AAID,CAxFDlB","file":"../../__tests__/Exp-test.js","sourcesContent":["jest.mock('fs');\n\nconst fs = require('fs');\nconst mockfs = require('mock-fs');\n\nimport * as Exp from '../Exp';\n\ndescribe('determineEntryPointAsync', () => {\n  beforeEach(() => {\n    const packageJson = JSON.stringify({\n      name: 'testing123',\n      version: '0.1.0',\n      main: 'index.js',\n    }, null, 2);\n\n    const packageJsonAndroid = JSON.stringify({\n      name: 'testing123android',\n      version: '0.1.0',\n      main: 'index.android.js',\n    }, null, 2);\n\n    const packageJsonIos = JSON.stringify({\n      name: 'testing123ios',\n      version: '0.1.0',\n      main: 'index.ios.js',\n    }, null, 2);\n\n    const packageJsonNoMain = JSON.stringify({\n      name: 'testing456',\n      version: '0.2.0',\n    });\n\n    const expJson = JSON.stringify({\n      name: 'testing 123',\n      version: '0.1.0',\n      slug: 'testing-123',\n    }, null, 2);\n\n    const expJsonWithEntry = JSON.stringify({\n      name: 'testing567',\n      version: '0.6.0',\n      entryPoint: 'main.js',\n    });\n\n    fs.__configureFs({\n      '/exists-no-platform/package.json': packageJson,\n      '/exists-no-platform/exp.json': expJson,\n      '/exists-no-platform/index.js': 'console.log(\"lol\")',\n\n      '/exists-no-platform-no-main/package.json': packageJsonNoMain,\n      '/exists-no-platform-no-main/exp.json': expJson,\n      '/exists-no-platform-no-main/index.js': 'console.log(\"lol\")',\n\n      '/exists-android/package.json': packageJsonAndroid,\n      '/exists-android/exp.json': expJson,\n      '/exists-android/index.android.js': 'console.log(\"lol\")',\n\n      '/exists-ios/package.json': packageJsonIos,\n      '/exists-ios/exp.json': expJson,\n      '/exists-ios/index.ios.js': 'console.log(\"lol\")',\n\n      '/exists-expjson/package.json': packageJson,\n      '/exists-expjson/exp.json': expJsonWithEntry,\n      '/exists-expjson/main.js': 'console.log(\"lol\")',\n    });\n  });\n\n  afterEach(() => {\n    mockfs.restore();\n  });\n\n  it('exists-no-platform', async () => {\n    const entryPoint = await Exp.determineEntryPointAsync('/exists-no-platform');\n    expect(entryPoint).toBe('index.js');\n  });\n\n  it('exists-no-platform-no-main', async () => {\n    const entryPoint = await Exp.determineEntryPointAsync('/exists-no-platform-no-main');\n    expect(entryPoint).toBe('index.js');\n  });\n\n  it('exists-android', async () => {\n    const entryPoint = await Exp.determineEntryPointAsync('/exists-android');\n    expect(entryPoint).toBe('index.android.js');\n  });\n\n  it('exists-ios', async () => {\n    const entryPoint = await Exp.determineEntryPointAsync('/exists-ios');\n    expect(entryPoint).toBe('index.ios.js');\n  });\n\n  it('exists-expjson', async () => {\n    const entryPoint = await Exp.determineEntryPointAsync('/exists-expjson');\n    expect(entryPoint).toBe('main.js');\n  });\n});\n"],"sourceRoot":"/xdl/src"}