{"version":3,"sources":["ios.js"],"names":["constructManifestUrlAsync","process","cwd","address","hostType","localAddress","console","log","openUrlInSimulatorSafeAsync","success","msg","generate","green","qrCode","underline","cyan","red","exit","startSimulatorAndPrintInfo","validation","reactNativeVersionWarnings","developerTool","offline","command","sync","join","isPlatformSupported","yellow","run"],"mappings":";;;;;;;;;;AAgCA;;wEACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwB,cAASA,yBAAT,CAAmCC,QAAQC,GAAR,EAAnC,CADxB;;AAAA;AACQC,mBADR;AAAA;AAAA,mBAE6B,cAASH,yBAAT,CAAmCC,QAAQC,GAAR,EAAnC,EAAkD;AAC3EE,wBAAU;AADiE,aAAlD,CAF7B;;AAAA;AAEQC,wBAFR;;;AAMEC,oBAAQC,GAAR,CAAY,uBAAZ;AANF;AAAA,mBAOiC,eAAUC,2BAAV,CAAsCH,YAAtC,CAPjC;;AAAA;AAAA;AAOUI,mBAPV,SAOUA,OAPV;AAOmBC,eAPnB,SAOmBA,GAPnB;;;AASE,gBAAID,OAAJ,EAAa;AACX,uCAAGE,QAAH,CAAYR,OAAZ,EAAqB,kBAAU;AAC7BG,wBAAQC,GAAR,CACK,gBAAMK,KAAN,CAAY,mBAAZ,CADL,sJAMJ,4BAAOC,MAAP,EAAe,CAAf,CANI,sEAUF,gBAAMC,SAAN,CAAgB,gBAAMC,IAAN,CAAWZ,OAAX,CAAhB,CAVE,sIAc4C,gBAAMW,SAAN,CAAgB,gBAAMC,IAAN,CAAW,iBAAX,CAAhB,CAd5C;AAqBD,eAtBD;AAuBD,aAxBD,MAwBO;AACLT,sBAAQC,GAAR,CACK,gBAAMS,GAAN,CAAU,4BAAV,CADL,YAGFN,GAHE,YAKF,gBAAMM,GAAN,CAAU,YAAV,CALE;AAOAf,sBAAQgB,IAAR,CAAa,CAAb;AACD;;AA1CH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,0B;;;;;AAjCf;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,YAAOC,UAAP,CAAkBC,0BAAlB,GAA+C,KAA/C;AACA,YAAOC,aAAP,GAAuB,MAAvB;AACA,YAAOC,OAAP,GAAiB,IAAjB;;AAEA,IAAMC,UAAkB,qBAAWC,IAAX,CAAgB,eAAKC,IAAL,CAAUxB,QAAQC,GAAR,EAAV,EAAyB,WAAzB,CAAhB,IAAyD,SAAzD,GAAqE,KAA7F;;AAEA,IAAI,CAAC,eAAUwB,mBAAV,EAAL,EAAsC;AACpCpB,UAAQC,GAAR,CACE,gBAAMS,GAAN,CACE,0FADF,CADF;AAKAV,UAAQC,GAAR,CACE,gBAAMoB,MAAN,kBACkB,gBAAMZ,IAAN,CAAWQ,UAAU,QAArB,CADlB,0DADF;AAKAtB,UAAQgB,IAAR,CAAa,CAAb;AACD;;AAED,mBAASW,GAAT,CAAaV,0BAAb","file":"ios.js","sourcesContent":["import { Config, ProjectSettings, Simulator, UrlUtils } from 'xdl';\n\nimport chalk from 'chalk';\nimport indent from 'indent-string';\nimport path from 'path';\nimport pathExists from 'path-exists';\nimport qr from 'qrcode-terminal';\n\nimport packager from '../util/packager';\n\nConfig.validation.reactNativeVersionWarnings = false;\nConfig.developerTool = 'crna';\nConfig.offline = true;\n\nconst command: string = pathExists.sync(path.join(process.cwd(), 'yarn.lock')) ? 'yarnpkg' : 'npm';\n\nif (!Simulator.isPlatformSupported()) {\n  console.log(\n    chalk.red(\n      '\\nThis command only works on macOS computers with Xcode and the iOS simulator installed.'\n    )\n  );\n  console.log(\n    chalk.yellow(\n      `If you run \\`${chalk.cyan(command + ' start')}\\` then you can view your app on a physical device.\\n`\n    )\n  );\n  process.exit(1);\n}\n\npackager.run(startSimulatorAndPrintInfo);\n\n// print a nicely formatted message with setup information\nasync function startSimulatorAndPrintInfo() {\n  const address = await UrlUtils.constructManifestUrlAsync(process.cwd());\n  const localAddress = await UrlUtils.constructManifestUrlAsync(process.cwd(), {\n    hostType: 'localhost',\n  });\n\n  console.log('Starting simulator...');\n  const { success, msg } = await Simulator.openUrlInSimulatorSafeAsync(localAddress);\n\n  if (success) {\n    qr.generate(address, qrCode => {\n      console.log(\n        `${chalk.green('Packager started!')}\n\nTo view your app with live reloading, point the Expo app to this QR code.\nYou'll find the QR scanner on the Projects tab of the app.\n\n${indent(qrCode, 2)}\n\nOr enter this address in the Expo app's search bar:\n\n  ${chalk.underline(chalk.cyan(address))}\n\nYour phone will need to be on the same local network as this computer.\n\nFor links to install the Expo app, please visit ${chalk.underline(chalk.cyan('https://expo.io'))}.\n\nLogs from serving your app will appear here. Press Ctrl+C at any time to stop.\n\nIf you restart the simulator or change the simulated hardware, you may need to restart this process.\n`\n      );\n    });\n  } else {\n    console.log(\n      `${chalk.red('Failed to start simulator:')}\n\n${msg}\n\n${chalk.red('Exiting...')}`\n    );\n    process.exit(0);\n  }\n}\n"]}