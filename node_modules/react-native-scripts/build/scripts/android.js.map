{"version":3,"sources":["android.js"],"names":["constructManifestUrlAsync","process","cwd","address","console","log","openProjectAsync","success","error","generate","green","qrCode","underline","cyan","red","message","startAndroidAndPrintInfo","validation","reactNativeVersionWarnings","developerTool","offline","command","sync","join","run"],"mappings":";;;;;;;;;;AAkBA;;wEACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwB,cAASA,yBAAT,CAAmCC,QAAQC,GAAR,EAAnC,CADxB;;AAAA;AACQC,mBADR;;AAEEC,oBAAQC,GAAR,CAAY,qBAAZ;;AAFF;AAAA,mBAImC,aAAQC,gBAAR,CAAyBL,QAAQC,GAAR,EAAzB,CAJnC;;AAAA;AAAA;AAIUK,mBAJV,SAIUA,OAJV;AAImBC,iBAJnB,SAImBA,KAJnB;;;AAME,qCAAGC,QAAH,CAAYN,OAAZ,EAAqB,kBAAU;AAC7BC,sBAAQC,GAAR,CACK,gBAAMK,KAAN,CAAY,mBAAZ,CADL,sJAMF,4BAAOC,MAAP,EAAe,CAAf,CANE,sEAUA,gBAAMC,SAAN,CAAgB,gBAAMC,IAAN,CAAWV,OAAX,CAAhB,CAVA,sIAc8C,gBAAMS,SAAN,CAAgB,gBAAMC,IAAN,CAAW,iBAAX,CAAhB,CAd9C;AAmBD,aApBD;;AAsBA,gBAAI,CAACN,OAAL,EAAc;AACZH,sBAAQC,GAAR,CAAY,gBAAMS,GAAN,CAAUN,MAAMO,OAAhB,CAAZ;AACD;;AA9BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,wB;;;;;AAnBf;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,YAAOC,UAAP,CAAkBC,0BAAlB,GAA+C,KAA/C;AACA,YAAOC,aAAP,GAAuB,MAAvB;AACA,YAAOC,OAAP,GAAiB,IAAjB;;AAEA,IAAMC,UAAkB,qBAAWC,IAAX,CAAgB,eAAKC,IAAL,CAAUtB,QAAQC,GAAR,EAAV,EAAyB,WAAzB,CAAhB,IAAyD,SAAzD,GAAqE,KAA7F;;AAEA,mBAASsB,GAAT,CAAaR,wBAAb","file":"android.js","sourcesContent":["import { Android, Config, ProjectSettings, UrlUtils } from 'xdl';\n\nimport chalk from 'chalk';\nimport indent from 'indent-string';\nimport path from 'path';\nimport pathExists from 'path-exists';\nimport qr from 'qrcode-terminal';\n\nimport packager from '../util/packager';\n\nConfig.validation.reactNativeVersionWarnings = false;\nConfig.developerTool = 'crna';\nConfig.offline = true;\n\nconst command: string = pathExists.sync(path.join(process.cwd(), 'yarn.lock')) ? 'yarnpkg' : 'npm';\n\npackager.run(startAndroidAndPrintInfo);\n\n// print a nicely formatted message with setup information\nasync function startAndroidAndPrintInfo() {\n  const address = await UrlUtils.constructManifestUrlAsync(process.cwd());\n  console.log('Starting Android...');\n\n  const { success, error } = await Android.openProjectAsync(process.cwd());\n\n  qr.generate(address, qrCode => {\n    console.log(\n      `${chalk.green('Packager started!')}\n\nTo view your app with live reloading, point the Expo app to this QR code.\nYou'll find the QR scanner on the Projects tab of the app.\n\n${indent(qrCode, 2)}\n\nOr enter this address in the Expo app's search bar:\n\n  ${chalk.underline(chalk.cyan(address))}\n\nYour phone will need to be on the same local network as this computer.\n\nFor links to install the Expo app, please visit ${chalk.underline(chalk.cyan('https://expo.io'))}.\n\nLogs from serving your app will appear here. Press Ctrl+C at any time to stop.\n`\n    );\n  });\n\n  if (!success) {\n    console.log(chalk.red(error.message));\n  }\n}\n"]}